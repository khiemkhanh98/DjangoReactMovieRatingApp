{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default function Edit(props) {\n  var movie = props.navigation.getParam('movie', {\n    title: '',\n    description: ''\n  });\n\n  var _useState = useState(movie.title),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(movie.description),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var saveMovie = function saveMovie() {\n    if (movie.id) {\n      fetch(\"http://192.168.0.175:8000/api/movies/\" + movie.id + \"/\", {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: title,\n          description: description\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (movie) {\n        return props.navigation.navigate('Detail', {\n          movie: movie,\n          title: movie.title\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    } else {\n      fetch(\"http://192.168.0.175:8000/api/movies/\", {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: title,\n          description: description\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (movie) {\n        return props.navigation.navigate('MovieList');\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.label\n  }, \"Title\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Title\",\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    value: title\n  }), React.createElement(Text, {\n    style: styles.label\n  }, \"Description\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Description\",\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    value: description\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return saveMovie();\n    },\n    title: movie.id ? 'Edit' : 'Add'\n  }));\n}\n\nvar removeClicked = function removeClicked(props) {\n  var movie = props.navigation.getParam('movie');\n  fetch(\"http://192.168.0.175:8000/api/movies/\" + movie.id + \"/\", {\n    method: 'DELETE',\n    headers: {\n      'Authorization': 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: title,\n      description: description\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (movie) {\n    return props.navigation.navigate('MovieList');\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\n\nEdit.navigationOptions = function (screenProps) {\n  return {\n    title: screenProps.navigation.getParam('movie').title,\n    headerStyle: {\n      backgroundColor: 'orange'\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      fontWeight: 'bold',\n      fontSize: 24\n    },\n    headerRight: function headerRight() {\n      return React.createElement(Button, {\n        title: \"Remove\",\n        color: \"orange\",\n        onPress: function onPress() {\n          return removeClicked(screenProps);\n        }\n      });\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#282C35',\n    padding: 10\n  },\n  label: {\n    fontSize: 24,\n    color: 'white',\n    padding: 10\n  },\n  input: {\n    backgroundColor: 'white',\n    fontSize: 24,\n    padding: 10,\n    margin: 10\n  }\n});","map":{"version":3,"sources":["F:/MovieRater/components/edit.js"],"names":["StatusBar","React","useState","useEffect","Edit","props","movie","navigation","getParam","title","description","setTitle","setDescription","saveMovie","id","fetch","method","headers","body","JSON","stringify","then","res","json","navigate","catch","error","console","log","styles","container","label","input","text","removeClicked","navigationOptions","screenProps","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerRight","StyleSheet","create","flex","padding","color","margin"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, FlatList , Image, Button, TextInput} from 'react-native';\r\n\r\nexport default function Edit(props) {\r\n    const movie = props.navigation.getParam('movie', {title:'',description:''})\r\n    const [title,setTitle] = useState(movie.title)\r\n    const [description,setDescription] = useState(movie.description)\r\n\r\n    const saveMovie = () => {\r\n        if (movie.id){\r\n            fetch(`http://192.168.0.175:8000/api/movies/${movie.id}/`, {\r\n            // fetch('http://127.0.0.1:8000/api/movies/', { \r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization' : 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({title:title, description:description})\r\n            }).then(res => res.json())\r\n            .then(movie => props.navigation.navigate('Detail', {movie: movie, title:movie.title}))\r\n            .catch(error => console.log(error))\r\n        }\r\n        else {\r\n            fetch(`http://192.168.0.175:8000/api/movies/`, {\r\n            // fetch('http://127.0.0.1:8000/api/movies/', { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization' : 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({title:title, description:description})\r\n            }).then(res => res.json())\r\n            .then(movie => props.navigation.navigate('MovieList'))\r\n            .catch(error => console.log(error))\r\n        }\r\n    }      \r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.label}>Title</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Title\"\r\n                onChangeText={text=>setTitle(text)}\r\n                value={title}\r\n            />\r\n            <Text style={styles.label}>Description</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Description\"\r\n                onChangeText={text=>setDescription(text)}\r\n                value={description}\r\n            />\r\n            <Button onPress={()=>saveMovie()} title={movie.id ? 'Edit' : 'Add'}/>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst removeClicked = (props) => {\r\n    const movie = props.navigation.getParam('movie')\r\n    fetch(`http://192.168.0.175:8000/api/movies/${movie.id}/`, {\r\n        // fetch('http://127.0.0.1:8000/api/movies/', { \r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization' : 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({title:title, description:description})\r\n        }).then(res => res.json())\r\n        .then(movie => props.navigation.navigate('MovieList'))\r\n        .catch(error => console.log(error))\r\n}\r\n\r\nEdit.navigationOptions = screenProps => ({\r\n    title: screenProps.navigation.getParam('movie').title ,\r\n    headerStyle:{\r\n         backgroundColor: 'orange'\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 24\r\n    },\r\n    headerRight: () =>  <Button title='Remove' color='orange' onPress={() => removeClicked(screenProps)}/>,\r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#282C35',\r\n    padding: 10\r\n  },\r\n  \r\n  label: {\r\n      fontSize: 24,\r\n      color: 'white',\r\n      padding: 10\r\n  },\r\n\r\n  input : {\r\n    backgroundColor: 'white',\r\n    fontSize: 24,\r\n    padding: 10,\r\n    margin: 10\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}