{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  useEffect(function () {\n    fetch('http://192.168.0.26:8000/api/movies/', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return setMovies(res);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }, []);\n  return React.createElement(View, null, React.createElement(Image, {\n    source: require(\"../assets/MR_logo.png\"),\n    style: {\n      width: '100%',\n      height: 135,\n      paddingTop: 2\n    },\n    resizeMode: \"contain\"\n  }), React.createElement(FlatList, {\n    data: movies,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.item\n      }, React.createElement(Text, {\n        style: styles.itemText\n      }, item.title));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    flex: 1,\n    padding: 10,\n    height: 50,\n    backgroundColor: '#282C35'\n  },\n  itemText: {\n    color: '#fff',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["F:/MovieRater/components/list.js"],"names":["StatusBar","React","useState","useEffect","App","movies","setMovies","fetch","method","headers","then","res","json","catch","error","console","log","require","width","height","paddingTop","item","styles","itemText","title","index","toString","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","padding","color","fontSize"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAC1B,kBAA2BF,QAAQ,CAAC,EAAD,CAAnC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAcC,SAAd;;AACAH,EAAAA,SAAS,CAAE,YAAM;AACbI,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC1CC,MAAAA,MAAM,EAAE,KADkC;AAE1CC,MAAAA,OAAO,EAAE;AACL,yBAAkB;AADb;AAFiC,KAAzC,CAAL,CAKGC,IALH,CAKQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALX,EAK2BF,IAL3B,CAKgC,UAAAC,GAAG;AAAA,aAAIL,SAAS,CAACK,GAAD,CAAb;AAAA,KALnC,EAKuDE,KALvD,CAK6D,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KALlE;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,SACI,oBAAC,IAAD,QACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEG,OAAO,yBAAtB;AAAiD,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC,GAArB;AAAyBC,MAAAA,UAAU,EAAC;AAApC,KAAxD;AACA,IAAA,UAAU,EAAC;AADX,IADJ,EAGI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAIf,MADZ;AAEI,IAAA,UAAU,EAAI;AAAA,UAAEgB,IAAF,QAAEA,IAAF;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACD;AAApB,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SAA+BF,IAAI,CAACG,KAApC,CADJ,CADU;AAAA,KAFlB;AAOI,IAAA,YAAY,EAAI,sBAACH,IAAD,EAAOI,KAAP;AAAA,aAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA;AAPpB,IAHJ,CADJ;AAeH;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAQ/BZ,EAAAA,IAAI,EAAG;AACLS,IAAAA,IAAI,EAAC,CADA;AAELI,IAAAA,OAAO,EAAE,EAFJ;AAGLf,IAAAA,MAAM,EAAE,EAHH;AAILY,IAAAA,eAAe,EAAE;AAJZ,GARwB;AAe/BR,EAAAA,QAAQ,EAAE;AACRY,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,QAAQ,EAAE;AAFF;AAfqB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, FlatList , Image} from 'react-native';\r\n\r\nexport default function App() {\r\n    const [movies,setMovies] = useState([])\r\n    useEffect( () => {\r\n        fetch('http://192.168.0.26:8000/api/movies/', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\r\n            }\r\n        }).then(res => res.json()).then(res => setMovies(res)).catch(error => console.log(error))\r\n    }, [])\r\n\r\n    return (\r\n        <View>\r\n            <Image source={require('../assets/MR_logo.png')} style={{width:'100%',height:135,paddingTop:2}} \r\n            resizeMode='contain'/>\r\n            <FlatList \r\n                data = {movies}\r\n                renderItem = {({item}) => (\r\n                    <View style={styles.item}>\r\n                        <Text style={styles.itemText}>{item.title}</Text> \r\n                    </View>\r\n                )}\r\n                keyExtractor = {(item, index) => index.toString()} \r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  item : {\r\n    flex:1,\r\n    padding: 10,\r\n    height: 50,\r\n    backgroundColor: '#282C35'\r\n  },\r\n\r\n  itemText: {\r\n    color: '#fff',\r\n    fontSize: 24\r\n  }\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}