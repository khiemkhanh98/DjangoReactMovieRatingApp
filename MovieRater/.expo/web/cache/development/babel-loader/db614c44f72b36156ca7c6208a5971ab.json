{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function MovieList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  var token = null;\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('MR_Token'));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              getMovies();\n            } else {\n              props.navigation.navigate('Auth');\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, [token]);\n\n  var getMovies = function getMovies() {\n    fetch('http://192.168.0.175:8000/api/movies/', {\n      method: 'GET',\n      headers: {\n        'Authorization': \"Token \" + token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return setMovies(res);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  var movieclicked = function movieclicked(movie) {\n    props.navigation.navigate('Detail', {\n      movie: movie,\n      title: movie.title,\n      token: token\n    });\n  };\n\n  return React.createElement(View, null, React.createElement(Image, {\n    source: require(\"../assets/MR_logo.png\"),\n    style: {\n      width: '100%',\n      height: 135\n    },\n    resizeMode: \"contain\"\n  }), React.createElement(FlatList, {\n    data: movies,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return movieclicked(item);\n        }\n      }, React.createElement(View, {\n        style: styles.item\n      }, React.createElement(Text, {\n        style: styles.itemText\n      }, item.title)));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    }\n  }));\n}\n\nMovieList.navigationOptions = function (screenProps) {\n  return {\n    title: 'List of movies',\n    headerStyle: {\n      backgroundColor: 'orange'\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      fontWeight: 'bold',\n      fontSize: 24\n    },\n    headerRight: function headerRight() {\n      return React.createElement(Button, {\n        title: \"Add new\",\n        color: \"orange\",\n        onPress: function onPress() {\n          return screenProps.navigation.navigate('Edit', {\n            movie: {\n              title: '',\n              description: ''\n            }\n          });\n        }\n      });\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    flex: 1,\n    padding: 10,\n    height: 50,\n    backgroundColor: '#282C35'\n  },\n  itemText: {\n    color: '#fff',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["F:/MovieRater/components/list.js"],"names":["StatusBar","React","useState","useEffect","AsyncStorage","MovieList","props","movies","setMovies","token","getData","getItem","getMovies","navigation","navigate","fetch","method","headers","then","res","json","catch","error","console","log","movieclicked","movie","title","require","width","height","item","styles","itemText","index","toString","navigationOptions","screenProps","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerRight","description","StyleSheet","create","container","flex","alignItems","justifyContent","padding","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, FlatList , Image, TouchableOpacity, Button} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function MovieList(props) {\r\n    const [movies,setMovies] = useState([])\r\n    let token = null;\r\n    \r\n    const getData = async () => {\r\n        token = await AsyncStorage.getItem('MR_Token')\r\n        if (token){\r\n            getMovies();\r\n        } else {\r\n            props.navigation.navigate('Auth')\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        getData()\r\n    }, [token])\r\n\r\n    const getMovies = () => {\r\n        fetch('http://192.168.0.175:8000/api/movies/', {\r\n        // fetch('http://127.0.0.1:8000/api/movies/', { \r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : `Token ${token}`,\r\n            }\r\n        }).then(res => res.json()).then(res => setMovies(res)).catch(error => console.log(error))\r\n    }\r\n\r\n    const movieclicked = (movie) => {\r\n        props.navigation.navigate('Detail', {movie: movie, title:movie.title, token:token})\r\n    }\r\n\r\n    return (\r\n        <View >\r\n            <Image source={require('../assets/MR_logo.png')} style={{width:'100%',height:135}} \r\n            resizeMode='contain'/>\r\n            <FlatList \r\n                data = {movies}\r\n                renderItem = {({item}) => (\r\n                    <TouchableOpacity onPress={() => movieclicked(item)}>\r\n                        <View style={styles.item}>\r\n                            <Text style={styles.itemText}>{item.title}</Text> \r\n                        </View>\r\n                    </TouchableOpacity>\r\n                )}\r\n                keyExtractor = {(item, index) => index.toString()} \r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nMovieList.navigationOptions = screenProps => ({\r\n    title: 'List of movies',\r\n    headerStyle: {\r\n        backgroundColor: 'orange'\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 24\r\n    },\r\n    headerRight: () =>  <Button title='Add new' color='orange' \r\n        onPress={() => screenProps.navigation.navigate('Edit',{movie:{title: '', description: ''}})} />,\r\n    \r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  item : {\r\n    flex:1,\r\n    padding: 10,\r\n    height: 50,\r\n    backgroundColor: '#282C35'\r\n  },\r\n\r\n  itemText: {\r\n    color: '#fff',\r\n    fontSize: 24\r\n  }\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}