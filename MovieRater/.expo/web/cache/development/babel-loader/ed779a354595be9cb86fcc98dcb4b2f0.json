{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Auth(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var auth = function auth() {\n    fetch(\"http://192.168.0.175:8000/auth/\", {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res.non_field_errors) {\n        console.log('allert');\n        Alert.alert('Error', 'Wrong Password/Username');\n      } else {\n        saveData(res.token);\n        props.navigation.navigate('MovieList');\n      }\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  var saveData = function saveData(token) {\n    return _regeneratorRuntime.async(function saveData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('MR_Token', token));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.label\n  }, \"Username\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Username\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    value: username,\n    autoCapitalize: 'none'\n  }), React.createElement(Text, {\n    style: styles.label\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    autoCapitalize: 'none',\n    secureTextEntry: true\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return auth();\n    },\n    title: \"Login\"\n  }));\n}\n\nAuth.navigationOptions = function (screenProps) {\n  return {\n    title: 'Login',\n    headerStyle: {\n      backgroundColor: 'orange'\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      fontWeight: 'bold',\n      fontSize: 24\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#282C35',\n    padding: 10\n  },\n  label: {\n    fontSize: 24,\n    color: 'white',\n    padding: 10\n  },\n  input: {\n    backgroundColor: 'white',\n    fontSize: 24,\n    padding: 10,\n    margin: 10\n  }\n});","map":{"version":3,"sources":["F:/MovieRater/components/auth.js"],"names":["StatusBar","React","useState","useEffect","AsyncStorage","Auth","props","username","setUsername","password","setPassword","auth","fetch","method","headers","body","JSON","stringify","then","res","json","non_field_errors","console","log","Alert","alert","saveData","token","navigation","navigate","catch","error","setItem","styles","container","label","input","text","navigationOptions","screenProps","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","StyleSheet","create","flex","padding","color","margin"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, FlatList , Image, Button, TextInput,Alert} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function Auth(props) {\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n\r\n    // useEffect(() => {\r\n    //     getData()\r\n    // },[])\r\n\r\n    const auth = () => {\r\n            fetch(`http://192.168.0.175:8000/auth/`, {\r\n            // fetch('http://127.0.0.1:8000/api/movies/', { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization' : 'Token 2ea3ee1268d7d28577e1390b71c1ec40545e3ea7',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({username,password})\r\n            }).then(res => res.json())\r\n            .then(res => {\r\n                if (res.non_field_errors) {\r\n                    console.log('allert')\r\n                    Alert.alert('Error', 'Wrong Password/Username')} \r\n                else {saveData(res.token)\r\n                    props.navigation.navigate('MovieList')}\r\n                })\r\n            .catch(error => console.log(error))\r\n        \r\n    }      \r\n\r\n    const saveData = async (token) => {\r\n        await AsyncStorage.setItem('MR_Token', token)\r\n    }\r\n\r\n    // const getData = async () => {\r\n    //     const token = await AsyncStorage.getItem('MR_Token')\r\n    //     if (token) props.navigation.navigate('MovieList')\r\n    // }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.label}>Username</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Username\"\r\n                onChangeText={text=>setUsername(text)}\r\n                value={username}\r\n                autoCapitalize={'none'}\r\n            />\r\n            <Text style={styles.label}>Password</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Password\"\r\n                onChangeText={text=>setPassword(text)}\r\n                value={password}\r\n                autoCapitalize={'none'}\r\n                secureTextEntry={true}\r\n            />\r\n            <Button onPress={()=>auth()} title='Login'/>\r\n        </View>\r\n    );\r\n}\r\n\r\nAuth.navigationOptions = screenProps => ({\r\n    title: 'Login',\r\n    headerStyle:{\r\n         backgroundColor: 'orange'\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 24\r\n    },\r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#282C35',\r\n    padding: 10\r\n  },\r\n  \r\n  label: {\r\n      fontSize: 24,\r\n      color: 'white',\r\n      padding: 10\r\n  },\r\n\r\n  input : {\r\n    backgroundColor: 'white',\r\n    fontSize: 24,\r\n    padding: 10,\r\n    margin: 10\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}